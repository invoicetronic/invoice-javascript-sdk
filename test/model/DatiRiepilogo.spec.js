/**
 * Italian eInvoice API
 * The Italian eInvoice API is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. The API also provides advanced features as encryption at rest, invoice validation, multiple upload formats, webhooks, event logging, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@invoicetronic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.invoiceSdk);
  }
}(this, function(expect, invoiceSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new invoiceSdk.DatiRiepilogo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DatiRiepilogo', function() {
    it('should create an instance of DatiRiepilogo', function() {
      // uncomment below and update the code to test DatiRiepilogo
      //var instance = new invoiceSdk.DatiRiepilogo();
      //expect(instance).to.be.a(invoiceSdk.DatiRiepilogo);
    });

    it('should have the property aliquotaIva (base name: "aliquota_iva")', function() {
      // uncomment below and update the code to test the property aliquotaIva
      //var instance = new invoiceSdk.DatiRiepilogo();
      //expect(instance).to.be();
    });

    it('should have the property natura (base name: "natura")', function() {
      // uncomment below and update the code to test the property natura
      //var instance = new invoiceSdk.DatiRiepilogo();
      //expect(instance).to.be();
    });

    it('should have the property speseAccessorie (base name: "spese_accessorie")', function() {
      // uncomment below and update the code to test the property speseAccessorie
      //var instance = new invoiceSdk.DatiRiepilogo();
      //expect(instance).to.be();
    });

    it('should have the property arrotondamento (base name: "arrotondamento")', function() {
      // uncomment below and update the code to test the property arrotondamento
      //var instance = new invoiceSdk.DatiRiepilogo();
      //expect(instance).to.be();
    });

    it('should have the property imponibileImporto (base name: "imponibile_importo")', function() {
      // uncomment below and update the code to test the property imponibileImporto
      //var instance = new invoiceSdk.DatiRiepilogo();
      //expect(instance).to.be();
    });

    it('should have the property imposta (base name: "imposta")', function() {
      // uncomment below and update the code to test the property imposta
      //var instance = new invoiceSdk.DatiRiepilogo();
      //expect(instance).to.be();
    });

    it('should have the property esigibilitaIva (base name: "esigibilita_iva")', function() {
      // uncomment below and update the code to test the property esigibilitaIva
      //var instance = new invoiceSdk.DatiRiepilogo();
      //expect(instance).to.be();
    });

    it('should have the property riferimentoNormativo (base name: "riferimento_normativo")', function() {
      // uncomment below and update the code to test the property riferimentoNormativo
      //var instance = new invoiceSdk.DatiRiepilogo();
      //expect(instance).to.be();
    });

  });

}));
