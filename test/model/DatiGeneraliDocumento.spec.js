/**
 * Italian eInvoice API
 * The Italian eInvoice API is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. The API also provides advanced features as encryption at rest, invoice validation, multiple upload formats, webhooks, event logging, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@invoicetronic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.invoiceSdk);
  }
}(this, function(expect, invoiceSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new invoiceSdk.DatiGeneraliDocumento();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DatiGeneraliDocumento', function() {
    it('should create an instance of DatiGeneraliDocumento', function() {
      // uncomment below and update the code to test DatiGeneraliDocumento
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be.a(invoiceSdk.DatiGeneraliDocumento);
    });

    it('should have the property tipoDocumento (base name: "tipo_documento")', function() {
      // uncomment below and update the code to test the property tipoDocumento
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

    it('should have the property divisa (base name: "divisa")', function() {
      // uncomment below and update the code to test the property divisa
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

    it('should have the property data (base name: "data")', function() {
      // uncomment below and update the code to test the property data
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

    it('should have the property numero (base name: "numero")', function() {
      // uncomment below and update the code to test the property numero
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

    it('should have the property datiRitenuta (base name: "dati_ritenuta")', function() {
      // uncomment below and update the code to test the property datiRitenuta
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

    it('should have the property datiBollo (base name: "dati_bollo")', function() {
      // uncomment below and update the code to test the property datiBollo
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

    it('should have the property datiCassaPrevidenziale (base name: "dati_cassa_previdenziale")', function() {
      // uncomment below and update the code to test the property datiCassaPrevidenziale
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

    it('should have the property scontoMaggiorazione (base name: "sconto_maggiorazione")', function() {
      // uncomment below and update the code to test the property scontoMaggiorazione
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

    it('should have the property importoTotaleDocumento (base name: "importo_totale_documento")', function() {
      // uncomment below and update the code to test the property importoTotaleDocumento
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

    it('should have the property arrotondamento (base name: "arrotondamento")', function() {
      // uncomment below and update the code to test the property arrotondamento
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

    it('should have the property causale (base name: "causale")', function() {
      // uncomment below and update the code to test the property causale
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

    it('should have the property art73 (base name: "art73")', function() {
      // uncomment below and update the code to test the property art73
      //var instance = new invoiceSdk.DatiGeneraliDocumento();
      //expect(instance).to.be();
    });

  });

}));
